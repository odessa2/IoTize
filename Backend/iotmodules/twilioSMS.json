{
    "iotize-schema-version" : "1.0",
    "name": "Twilio",
    "description": "code for conditional notification SMS via Twilio",
    "type": "service",
    "hardware": false,
    "dependency": "wificlient",
    "parameter": {
        "parameter": [

            {
                "name": "twilioAccountSID",
                "description": {
                    "en": "Your Twilio Account SID"
                }
            }, {
                "name": "twilioAuthtoken",
                "description": {
                    "en": "Your Twilio Auth Token"
                }
            }, {
                "name": "twilioPhoneFROM",
                "description": {
                    "en": "FROM Phone Number (eg +49999888666)"
                }
            }, {
                "name": "twilioPhoneTO",
                "description": {
                    "en": "Receiver Phone Number (eg +4917612300123)"
                }
            }, {
                "name": "twilioMessage",
                "description": {
                    "en": "SMS Text. Placeholder: CVALUE"
                }
            }, {
                "name": "twilioMode",
                "description": {
                    "en": "Mode \"0\": Send Notification if CompareValue < triggervalue  Mode \"1\": Send Notification if CompareValue > triggervalue"
                }
            }, {
                "name": "twilioTriggervalue",
                "description": {
                    "en": "Threshold for sending notification"
                }
            }, {
                "name": "twilioCheckInterval",
                "description": {
                    "en": "Check interval in Seconds"
                }
            }
        ],
        "dynamicParameter": {
            "multipleValues": 0,
            "placeholder": "GENERATEDSTRINGS",
            "parameterList": [{
                "type": "label",
                "name": "CompareValue",
                "description": {
                    "en": "Which Value should be compared to the triggervalue?"
                },
                "placeholder": "null"
            }, {
                "type": "value",
                "placeholder": "$VAL"
            }],
            "template": "checkNotification($VAL);\n\t\t"
        }
    },
    "values": "null",
    "sourceskel": {
        "includes": "#include <Ticker.h>\n#include <WiFiClientSecure.h>",
        "declarations": "Ticker twilioTicker;\nboolean twilioTrigger = true;\nconst int twilioTimerInterval = $twilioCheckInterval;\nconst int twilioMode = $twilioMode;\nString twilioTriggervalue = \"$twilioTriggervalue\";\nchar  twiliobuff[160];\nconst char* twilioHost = \"api.twilio.com\";\nconst int httpsPort = 443;\nconst char*  twilioAccountSID = \"$twilioAccountSID\";\nconst char* twilioAuthtoken = \"$twilioAuthtoken\";\nconst char* twilioMessage = \"$twilioMessage\";\nString twilioFrom =  \"$twilioPhoneFROM\";String twilioTo =  \"$twilioPhoneTO\";\n\n",
        "functions": "\nvoid triggerTwilio() {\n\ttwilioTrigger = true;\n}\nint urlencode(char *dest, const char *src) {\n\t/* urlencode all non-alphanumeric characters in the C-string 'src'\n\tstore result in the C-string 'dest'\n\treturn the length of the url encoded C-string\n\t*/\n\tchar *d;\n\tint i;\n\tfor (i = 0, d = dest; src[i]; i++) {\n\t\tif (isalnum(src[i])) *(d++) = src[i];\n\t\telse {sprintf(d, \"%%%02X\", src[i]); d += 3;}\n\t}\n\t*d = 0;\n\treturn d - dest;\n}\nvoid checkNotification(String compareValue) {\n\tif (twilioMode == 0) \n\t\tif (compareValue.toFloat() < twilioTriggervalue.toFloat()) \n\t\t\tsendTwilioNotification(compareValue);\n\tif (twilioMode == 1) \n\t\tif (compareValue.toFloat() > twilioTriggervalue.toFloat()) \n\t\t\tsendTwilioNotification(compareValue);\n}\nvoid sendTwilioNotification(String value) {\n\tString url = \"/2010-04-01/Accounts/\"+  String(twilioAccountSID); \n\turl+= \"/Messages.json\";\n\tSerial.print(\"requesting URL: \");Serial.println(url);\n\t\n\ttwilioFrom.replace(\"+\",\"%2B\"); twilioTo.replace(\"+\",\"%2B\");\n\tString msg = twilioMessage;\tmsg.replace(\"CVALUE\", value);\n\turlencode(twiliobuff,msg.c_str());\n\tSerial.print(\"Message : \");\tSerial.println(twiliobuff);\n\n\tString data = \"username=\" + String(twilioAccountSID);\n\tdata += \"&password=\" + String(twilioAuthtoken);\n\tdata += \"&From=\" + String(twilioFrom) + \"&To=\" + String(twilioTo); \n\tdata += \"&Body=\" + String(twiliobuff) ;\n\n\t// Use WiFiClientSecure class to create TLS connection\n\tWiFiClientSecure client;\n\tSerial.print(\"connecting to \");\tSerial.println(twilioHost);\n\n\tif (!client.connect(twilioHost, httpsPort)) {  \n\t\tSerial.println(\"connection failed\"); \n\t\treturn;\n\t}\n\tclient.println(\"POST \" + url + \" HTTP/1.1\");\n\tclient.println(\"Host: \" + (String)twilioHost);\n\tclient.println(\"User-Agent: ESP8266/1.0\");\n\tclient.println(\"Connection: close\");\n\tString auth=\"QUM0NzJlZDRlOWI5MTFkMzFhNzc2YTkyZjg0YzE4MmE1YToy\";\n\tauth +=\"ZTZmNjhhNjQ2NGI1MzFkMTlhMWNkZDlkYzZmOTg4ZA==\";\n\tclient.println(\"Authorization: Basic \" + auth);\n\tclient.println(\"Content-Type: application/x-www-form-urlencoded;\");\n\tclient.print(\"Content-Length: \");\n\tclient.println(data.length());\n\tclient.println();\n\tclient.println(data);\n\tdelay(10);\n\n\tString response = client.readString();\n\tint bodypos = response.indexOf(\"\\r\\n\\r\\n\") + 4;\n\tSerial.println(\"request sent\");Serial.println(\"reply was:\");\n\n\tSerial.println(\"======\");Serial.println(response.substring(bodypos));\n\tSerial.println(\"======\");Serial.println(\"closing connection\");\n}\n",
        "setup": "\ttwilioTicker.attach(twilioTimerInterval, triggerTwilio);\n",
        "loop": "\tif (twilioTrigger){\n\t\t$GENERATEDSTRINGS twilioTrigger=false;\n\t}\n"

    }
}


