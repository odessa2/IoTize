{
  "iotize-schema-version" : "1.0",
  "name": "Thingspeak",
  "description": "code for sending data to thingspeak",
  "type": "service",
  "hardware": false,
  "dependency": "wificlient",
  "parameter": {
    "parameter": [
      {"name":"thingspeakKey", "description":{"en": "Your Thingspeak API Key"}},
      {"name":"thingspeak_interval", "description":{"en": "Repetition interval in Seconds"}}

    ],
    "dynamicParameter": {
      "multipleValues": 1,
      "placeholder": "GENERATEDSTRINGS",
      "parameterList": [
      
         {
         "type" : "generated",
          "prefix": "field",
      	  "name": "NULL",
	      "description": {"en":"Fieldname as shown in Thingspeak Dashboard"},

          "placeholder": "$FIELD"
        },
        {
          "type": "value",
          "placeholder": "$VAL"
        }


      ],
      "template": "\t\tthingspeakdata += \"&$FIELD=\";thingspeakdata += String($VAL);\n"
    }
  },
  "values": "null",
  "sourceskel": {
    "includes": "#include <Ticker.h>",
    "declarations": "const char* host = \"api.thingspeak.com\";\nconst char* thingspeak_key = \"$thingspeakKey\";\nTicker thingiverseTicker;\nboolean thingiverseTrigger = true;\nconst int thingiverseTimerInterval = $thingspeak_interval;\n",
    "functions": "void triggerThingiverse(){\n\tthingiverseTrigger=true;\n}\nvoid submitToThingspeak(String data){\n\tconst int httpPort = 80;\n\tif (!client.connect(host, httpPort)) { return; }\n\tString url = \"/update?api_key=\";url += String(thingspeak_key);url += data;\n\tclient.print(String(\"GET \") + url + \" HTTP/1.1\\r\\n\" + \"Host: \" + host + \"\\r\\n\" +  \"Connection: close\\r\\n\\r\\n\");\n\tdelay(10);\n\tunsigned long timeout = millis();\n\twhile (client.available() == 0) {\n\t\tif (millis() - timeout > 5000)\n\t\t{\n\t\t\tclient.stop();\n\t\t\treturn;\n\t\t}\n\t}\n}\n",
    "setup": "\tthingiverseTicker.attach(thingiverseTimerInterval, triggerThingiverse);",
    "loop": "\tif (thingiverseTrigger){\n\t\tString thingspeakdata;\n$GENERATEDSTRINGS \t\tsubmitToThingspeak(thingspeakdata);\n\t\tthingiverseTrigger=false;\n\t}\n"
  }
}

